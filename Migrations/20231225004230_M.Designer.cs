// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proiect.ContextModels;

#nullable disable

namespace Proiect.Migrations
{
    [DbContext(typeof(ProiectContext))]
    [Migration("20231225004230_M")]
    partial class M
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArticolProfil", b =>
                {
                    b.Property<int>("ArticoleId")
                        .HasColumnType("int");

                    b.Property<int>("ProfiluriId")
                        .HasColumnType("int");

                    b.HasKey("ArticoleId", "ProfiluriId");

                    b.HasIndex("ProfiluriId");

                    b.ToTable("ArticolProfil");
                });

            modelBuilder.Entity("Proiect.Entities.Articol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Continut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titlu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UtilizatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilizatorId");

                    b.ToTable("Articol");
                });

            modelBuilder.Entity("Proiect.Entities.Profil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UtilizatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilizatorId")
                        .IsUnique()
                        .HasFilter("[UtilizatorId] IS NOT NULL");

                    b.ToTable("Profil");
                });

            modelBuilder.Entity("Proiect.Entities.Utilizator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Utilizator");
                });

            modelBuilder.Entity("ArticolProfil", b =>
                {
                    b.HasOne("Proiect.Entities.Articol", null)
                        .WithMany()
                        .HasForeignKey("ArticoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proiect.Entities.Profil", null)
                        .WithMany()
                        .HasForeignKey("ProfiluriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Proiect.Entities.Articol", b =>
                {
                    b.HasOne("Proiect.Entities.Utilizator", "Utilizator")
                        .WithMany("Articole")
                        .HasForeignKey("UtilizatorId");

                    b.Navigation("Utilizator");
                });

            modelBuilder.Entity("Proiect.Entities.Profil", b =>
                {
                    b.HasOne("Proiect.Entities.Utilizator", "Utilizator")
                        .WithOne("Profil")
                        .HasForeignKey("Proiect.Entities.Profil", "UtilizatorId");

                    b.Navigation("Utilizator");
                });

            modelBuilder.Entity("Proiect.Entities.Utilizator", b =>
                {
                    b.Navigation("Articole");

                    b.Navigation("Profil");
                });
#pragma warning restore 612, 618
        }
    }
}
